#!/usr/bin/env node
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _express = require('express');

var _express2 = _interopRequireDefault(_express);

var _bodyParser = require('body-parser');

var _bodyParser2 = _interopRequireDefault(_bodyParser);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _mkdir = require('./library/mkdir');

var _mkdir2 = _interopRequireDefault(_mkdir);

var _options = require('./library/options');

var _options2 = _interopRequireDefault(_options);

var _rmdir = require('./library/rmdir');

var _rmdir2 = _interopRequireDefault(_rmdir);

var _sendEmail = require('./send-email');

var _sendEmail2 = _interopRequireDefault(_sendEmail);

var _sendRawEmail = require('./send-raw-email');

var _sendRawEmail2 = _interopRequireDefault(_sendRawEmail);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Import node libs
var app = (0, _express2.default)();
// Import local libs

var log = console.log; //eslint-disable-line

app.use(_bodyParser2.default.json());
app.use(_bodyParser2.default.urlencoded({ extended: true }));

var errorTemplate = _fs2.default.readFileSync(__dirname + '/templates/error.xml', { encoding: 'utf-8' });

log('\n' + _chalk2.default.inverse('  AWS Simple Email Service Local ðŸ“ª   ') + '\n  ' + _chalk2.default.green('Listening on port:') + ' ' + _options2.default.port);

if (_options2.default.clean !== undefined) {
  log('  ' + _chalk2.default.red('Cleaning directory:') + ' ' + _options2.default.outputDir);
  (0, _rmdir2.default)(_options2.default.outputDir);
}

log('  ' + _chalk2.default.green('Creating output directory:') + ' ' + _options2.default.outputDir);
(0, _mkdir2.default)(_path2.default.join(_options2.default.outputDir));

app.post('/', function (req, res) {
  var dateTime = new Date().toISOString();
  var dateDir = _options2.default.outputDir + '/' + dateTime.slice(0, 10);
  var fullDir = dateDir + '/' + dateTime.slice(11, 22).replace(/:\s*/g, '.');

  try {
    switch (req.body.Action) {
      case 'SendEmail':
        (0, _sendEmail2.default)(req, res, dateDir, fullDir, log);
        break;
      case 'SendRawEmail':
        (0, _sendRawEmail2.default)(req, res, dateDir, fullDir, log);
        break;
      default:
        throw new Error('Unsupported action ' + req.body.Action);
    }
  } catch (err) {
    log('   ' + _chalk2.default.red('Error Occured:') + ' ' + err);
    res.status(500).send(errorTemplate.replace('{{code}}', 'MessageRejected').replace('{{message}}', err.message));
  }
});

app.listen(_options2.default.port);

exports.default = app;